var searchIndex = JSON.parse('{\
"compile":{"doc":"","i":[[3,"CompileContext","compile","A context attached to a specific function (or script)",null,null],[12,"constant_descriptors","","",0,null],[12,"debug_symbol_descriptors","","",0,null],[3,"CompileManager","","The manager in charge of converting any AST into valid…",null,null],[12,"context_stack","","A stack of contexts (corresponding to the stack of frame…",1,null],[12,"local_index","","The index of variables in a given context and their…",1,null],[12,"memory_manager","","",1,null],[4,"NameLookupResult","","The result of a variable lookup in a CompileManager",null,null],[13,"MyLocal","","The variable looked up is a local variable in the current…",2,null],[13,"ExternLocal","","The variable looked up is a local variable in another…",2,null],[13,"Global","","The variable looked up is a special global variable",2,null],[13,"NotFound","","The variable does not exist",2,null],[0,"script","","",null,null],[3,"ExprParser","compile::script","",null,null],[3,"ProgramParser","","",null,null],[11,"new","","",3,[[],["exprparser",3]]],[11,"parse","","",3,[[["vec",3],["intoiterator",8]],[["result",4],["expr",4],["parseerror",4]]]],[11,"new","","",4,[[],["programparser",3]]],[11,"parse","","",4,[[["vec",3],["intoiterator",8]],[["result",4],["parseerror",4],["statementlist",3]]]],[8,"__ToTriple","","",null,null],[10,"to_triple","","",5,[[],[["parseerror",4],["result",4]]]],[0,"error","compile","Compiletime errors for technetium",null,null],[3,"CompileError","compile::error","An error that has occured when translating code from the…",null,null],[12,"kind","","",6,null],[12,"help","","",6,null],[4,"CompileErrorType","","",null,null],[13,"UndefinedVariable","","",7,null],[11,"new","","",6,[[["tostring",8],["compileerrortype",4]]]],[11,"as_diagnostic","","Create a diagnostic message from an error, for reporting…",6,[[],["diagnostic",3]]],[0,"ast","compile","Abstract Syntax Tree types representing parsed Technetium…",null,null],[3,"ListLiteral","compile::ast","A list of expressions surrounded by square brackets in…",null,null],[12,"span","","",8,null],[12,"values","","",8,null],[3,"TupleLiteral","","A list of expressions surrounded by parenthesis in code:…",null,null],[12,"span","","",9,null],[12,"values","","",9,null],[3,"SetLiteral","","A list of expressions surrounded by brackets in code: `{1,…",null,null],[12,"span","","",10,null],[12,"values","","",10,null],[3,"DictLiteral","","A literal dictionary given in code: `{\\\"a\\\": true, \\\"b\\\": 123}`",null,null],[12,"span","","",11,null],[12,"values","","",11,null],[3,"FuncCall","","A function call, not attached to a particular parent…",null,null],[12,"span","","",12,null],[12,"func","","",12,null],[12,"arguments","","",12,null],[3,"AttrLookup","","An attribute expression without a function call (i.e., not…",null,null],[12,"span","","",13,null],[12,"parent","","",13,null],[12,"attribute","","",13,null],[3,"MethodCall","","A method call on an expression: `[1, 2].length()`",null,null],[12,"span","","",14,null],[12,"parent","","",14,null],[12,"fname","","",14,null],[12,"arguments","","",14,null],[3,"IndexedExpr","","An expression indexed with square brackets: `my_list[i + 2]`",null,null],[12,"span","","",15,null],[12,"parent","","",15,null],[12,"index","","",15,null],[3,"SlicedExpr","","An expression with a slice attached to it: `hello[1:3]` or…",null,null],[12,"span","","",16,null],[12,"parent","","",16,null],[12,"start","","",16,null],[12,"end","","",16,null],[12,"step","","",16,null],[3,"PostPreOp","","Some kind of post/pre-increment/decrement attached to a…",null,null],[12,"span","","",17,null],[12,"variant","","",17,null],[12,"val","","",17,null],[3,"AnonFuncDefinition","","",null,null],[12,"span","","",18,null],[12,"args","","",18,null],[12,"body","","",18,null],[3,"ForLoop","","",null,null],[12,"span","","",19,null],[12,"binding","","",19,null],[12,"iter","","",19,null],[12,"body","","",19,null],[3,"WhileLoop","","",null,null],[12,"span","","",20,null],[12,"cond","","",20,null],[12,"body","","",20,null],[3,"IfStatement","","",null,null],[12,"span","","",21,null],[12,"condition","","",21,null],[12,"then_body","","",21,null],[12,"tail","","",21,null],[3,"CaseOf","","",null,null],[12,"span","","",22,null],[12,"condition","","",22,null],[12,"cases","","",22,null],[3,"FuncDefinition","","",null,null],[12,"span","","",23,null],[12,"name","","",23,null],[12,"args","","",23,null],[12,"body","","",23,null],[3,"ReturnStatement","","",null,null],[12,"span","","",24,null],[12,"ret","","",24,null],[3,"ShStatement","","A line beginning in `$` to make a shell statement",null,null],[12,"span","","",25,null],[12,"inner","","",25,null],[3,"FormatString","","A string preceded by `~`, used to substitute variables…",null,null],[12,"span","","",26,null],[12,"val","","",26,null],[12,"substitutions","","",26,null],[3,"Assignment","","",null,null],[12,"span","","",27,null],[12,"lhs","","",27,null],[12,"val","","",27,null],[3,"StatementList","","",null,null],[12,"span","","",28,null],[12,"statements","","",28,null],[3,"Identifier","","A name given as part of an expression: `print`",null,null],[12,"span","","",29,null],[12,"name","","",29,null],[4,"Literal","","Any kind of literal written in code. Each variant…",null,null],[13,"Unit","","",30,null],[13,"Integer","","",30,null],[13,"Float","","",30,null],[13,"Str","","",30,null],[13,"Char","","",30,null],[13,"Bool","","",30,null],[13,"FormatString","","",30,null],[4,"Expr","","",null,null],[13,"Variable","","",31,null],[13,"Literal","","",31,null],[13,"ListLiteral","","",31,null],[13,"TupleLiteral","","",31,null],[13,"SetLiteral","","",31,null],[13,"DictLiteral","","",31,null],[13,"MethodCall","","",31,null],[13,"FuncCall","","",31,null],[13,"AttrLookup","","",31,null],[13,"IndexedExpr","","",31,null],[13,"SlicedExpr","","",31,null],[13,"PostPreOp","","",31,null],[13,"AnonFuncDefinition","","",31,null],[13,"Error","","An unreachable expression state, used to finish attempting…",31,null],[4,"PPOVariant","","",null,null],[13,"PostIncrement","","",32,null],[13,"PreIncrement","","",32,null],[13,"PostDecrement","","",32,null],[13,"PreDecrement","","",32,null],[4,"IfTail","","A possible additional clause on an if statement",null,null],[13,"ElseIf","","",33,null],[13,"Else","","",33,null],[4,"AssignmentLHS","","A type of expression that can be on the left of an…",null,null],[13,"Identifier","","",34,null],[13,"AttrLookup","","",34,null],[13,"Indexed","","",34,null],[4,"Statement","","",null,null],[13,"ForLoop","","",35,null],[13,"WhileLoop","","",35,null],[13,"IfStatement","","",35,null],[13,"CaseOf","","",35,null],[13,"ReturnStatement","","",35,null],[13,"ShStatement","","",35,null],[13,"FuncDefinition","","",35,null],[13,"Assignment","","",35,null],[13,"Expr","","",35,null],[13,"Error","","A dummy value used for parser recovery",35,null],[8,"AstExpr","","Common functionality for AST expression nodes",null,null],[10,"offset_spans","","Increase the indices of the Spans in this AST node by a…",36,[[]]],[11,"span","","",30,[[],["span",3]]],[11,"new","","",8,[[["vec",3],["expr",4]]]],[11,"new","","",9,[[["vec",3],["expr",4]]]],[11,"new","","",10,[[["vec",3],["expr",4]]]],[11,"new","","",11,[[["vec",3]]]],[11,"new","","",12,[[["vec",3],["expr",4]]]],[11,"new","","",13,[[["expr",4],["identifier",3]]]],[11,"new","","",14,[[["vec",3],["expr",4],["identifier",3]]]],[11,"new","","",15,[[["expr",4]]]],[11,"new","","",16,[[["option",4],["expr",4]]]],[11,"span","","",31,[[],["span",3]]],[11,"new_post_inc","","",17,[[["assignmentlhs",4]]]],[11,"new_pre_inc","","",17,[[["assignmentlhs",4]]]],[11,"new_post_dec","","",17,[[["assignmentlhs",4]]]],[11,"new_pre_dec","","",17,[[["assignmentlhs",4]]]],[11,"new","","",18,[[["vec",3],["statementlist",3],["identifier",3]]]],[11,"new","","",19,[[["expr",4],["statementlist",3],["identifier",3]]]],[11,"new","","",20,[[["expr",4],["statementlist",3]]]],[11,"new","","",21,[[["expr",4],["iftail",4],["option",4],["statementlist",3]]]],[11,"new","","",22,[[["expr",4],["vec",3]]]],[11,"new","","",23,[[["vec",3],["statementlist",3],["identifier",3]]]],[11,"new","","",24,[[["expr",4]]]],[11,"new","","",26,[[["vec",3],["string",3]],[["result",4],["miscparseerror",4]]]],[11,"as_expr","","",34,[[],["expr",4]]],[11,"from_expr","","",34,[[["expr",4]],["option",4]]],[11,"new","","",27,[[["assignmentlhs",4],["expr",4]]]],[11,"span","","",35,[[],["span",3]]],[11,"new","","",28,[[["vec",3],["statement",4]]]],[11,"new","","",29,[[["string",3]]]],[11,"new_expr","","",29,[[["string",3]],["expr",4]]],[6,"Bytecode","compile","",null,null],[6,"CompileResult","","",null,null],[11,"new","","",0,[[["contextid",6],["fileid",3]],["compilecontext",3]]],[11,"gcd_gen","","Generate a new, unused GlobalConstantDescriptor for this…",0,[[],["globalconstantdescriptor",6]]],[11,"dsd_gen","","Generate a new, unused DebugSpanDescriptor for this context",0,[[],["debugspandescriptor",6]]],[11,"new","","",1,[[["fileid",3]]]],[11,"context_id_gen","","Create a new unused ContextId",1,[[],["contextid",6]]],[11,"create_debug_descriptor","","Create a DebugSpanDescriptor, and attach a Span in the…",1,[[["span",3]],["debugspandescriptor",6]]],[11,"create_constant_descriptor","","",1,[[["objectref",3]],["globalconstantdescriptor",6]]],[11,"context","","Get the current context at the top of the stack",1,[[],["compilecontext",3]]],[11,"local_name_gen","","",1,[[],["localname",6]]],[11,"name_lookup","","",1,[[["string",3]],["namelookupresult",4]]],[11,"compile_literal","","",1,[[["literal",4]],["compileresult",6]]],[11,"compile_list_literal","","",1,[[["listliteral",3]],["compileresult",6]]],[11,"compile_tuple_literal","","",1,[[["tupleliteral",3]],["compileresult",6]]],[11,"compile_set_literal","","",1,[[["setliteral",3]],["compileresult",6]]],[11,"compile_dict_literal","","",1,[[["dictliteral",3]],["compileresult",6]]],[11,"compile_func_call","","",1,[[["funccall",3]],["compileresult",6]]],[11,"compile_attr_lookup","","",1,[[["attrlookup",3]],["compileresult",6]]],[11,"compile_method_call","","",1,[[["methodcall",3]],["compileresult",6]]],[11,"compile_expr","","",1,[[["expr",4]],["compileresult",6]]],[11,"compile_indexed_expr","","",1,[[["indexedexpr",3]],["compileresult",6]]],[11,"compile_post_pre_op","","",1,[[["postpreop",3]],["compileresult",6]]],[11,"compile_sliced_expr","","",1,[[["slicedexpr",3]],["compileresult",6]]],[11,"compile_for_loop","","",1,[[["forloop",3]],["compileresult",6]]],[11,"compile_while_loop","","",1,[[["whileloop",3]],["compileresult",6]]],[11,"compile_if_statement","","",1,[[["ifstatement",3]],["compileresult",6]]],[11,"compile_case_of","","",1,[[["caseof",3]],["compileresult",6]]],[11,"compile_func_definition","","",1,[[["funcdefinition",3]],["compileresult",6]]],[11,"compile_anon_func_definition","","",1,[[["anonfuncdefinition",3]],["compileresult",6]]],[11,"compile_return_statement","","",1,[[["returnstatement",3]],["compileresult",6]]],[11,"compile_format_string","","",1,[[["formatstring",3]],["compileresult",6]]],[11,"compile_sh_statement","","",1,[[["shstatement",3]],["compileresult",6]]],[11,"compile_assign_to","","",1,[[["assignmentlhs",4]],["compileresult",6]]],[11,"compile_assignment","","",1,[[["assignment",3]],["compileresult",6]]],[11,"compile_statement","","",1,[[["statement",4]],["compileresult",6]]],[11,"compile_statement_list","","",1,[[["statementlist",3]],["compileresult",6]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","compile::script","",3,[[]]],[11,"into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","compile::error","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","compile::ast","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"offset_spans","","",30,[[]]],[11,"offset_spans","","",8,[[]]],[11,"offset_spans","","",9,[[]]],[11,"offset_spans","","",10,[[]]],[11,"offset_spans","","",11,[[]]],[11,"offset_spans","","",12,[[]]],[11,"offset_spans","","",13,[[]]],[11,"offset_spans","","",14,[[]]],[11,"offset_spans","","",15,[[]]],[11,"offset_spans","","",16,[[]]],[11,"offset_spans","","",31,[[]]],[11,"offset_spans","","",17,[[]]],[11,"offset_spans","","",18,[[]]],[11,"offset_spans","","",26,[[]]],[11,"offset_spans","","",29,[[]]],[11,"clone","compile::error","",6,[[],["compileerror",3]]],[11,"clone","","",7,[[],["compileerrortype",4]]],[11,"clone","compile::ast","",30,[[],["literal",4]]],[11,"clone","","",8,[[],["listliteral",3]]],[11,"clone","","",9,[[],["tupleliteral",3]]],[11,"clone","","",10,[[],["setliteral",3]]],[11,"clone","","",11,[[],["dictliteral",3]]],[11,"clone","","",12,[[],["funccall",3]]],[11,"clone","","",13,[[],["attrlookup",3]]],[11,"clone","","",14,[[],["methodcall",3]]],[11,"clone","","",15,[[],["indexedexpr",3]]],[11,"clone","","",16,[[],["slicedexpr",3]]],[11,"clone","","",31,[[],["expr",4]]],[11,"clone","","",32,[[],["ppovariant",4]]],[11,"clone","","",17,[[],["postpreop",3]]],[11,"clone","","",18,[[],["anonfuncdefinition",3]]],[11,"clone","","",19,[[],["forloop",3]]],[11,"clone","","",20,[[],["whileloop",3]]],[11,"clone","","",21,[[],["ifstatement",3]]],[11,"clone","","",33,[[],["iftail",4]]],[11,"clone","","",22,[[],["caseof",3]]],[11,"clone","","",23,[[],["funcdefinition",3]]],[11,"clone","","",24,[[],["returnstatement",3]]],[11,"clone","","",25,[[],["shstatement",3]]],[11,"clone","","",26,[[],["formatstring",3]]],[11,"clone","","",34,[[],["assignmentlhs",4]]],[11,"clone","","",27,[[],["assignment",3]]],[11,"clone","","",35,[[],["statement",4]]],[11,"clone","","",28,[[],["statementlist",3]]],[11,"clone","","",29,[[],["identifier",3]]],[11,"fmt","compile::error","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","compile::ast","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]]],"p":[[3,"CompileContext"],[3,"CompileManager"],[4,"NameLookupResult"],[3,"ExprParser"],[3,"ProgramParser"],[8,"__ToTriple"],[3,"CompileError"],[4,"CompileErrorType"],[3,"ListLiteral"],[3,"TupleLiteral"],[3,"SetLiteral"],[3,"DictLiteral"],[3,"FuncCall"],[3,"AttrLookup"],[3,"MethodCall"],[3,"IndexedExpr"],[3,"SlicedExpr"],[3,"PostPreOp"],[3,"AnonFuncDefinition"],[3,"ForLoop"],[3,"WhileLoop"],[3,"IfStatement"],[3,"CaseOf"],[3,"FuncDefinition"],[3,"ReturnStatement"],[3,"ShStatement"],[3,"FormatString"],[3,"Assignment"],[3,"StatementList"],[3,"Identifier"],[4,"Literal"],[4,"Expr"],[4,"PPOVariant"],[4,"IfTail"],[4,"AssignmentLHS"],[4,"Statement"],[8,"AstExpr"]]},\
"lexer":{"doc":"","i":[[3,"Lexer","lexer","The main lexer responsible for turning a program source…",null,null],[4,"Tok","","A valid token for a technetium program",null,null],[13,"Newline","","",0,null],[13,"OpenBracket","","",0,null],[13,"CloseBracket","","",0,null],[13,"OpenBrace","","",0,null],[13,"CloseBrace","","",0,null],[13,"OpenParen","","",0,null],[13,"CloseParen","","",0,null],[13,"BackSlash","","",0,null],[13,"Comma","","",0,null],[13,"Dot","","",0,null],[13,"SingleEq","","",0,null],[13,"SRarrow","","",0,null],[13,"Rarrow","","",0,null],[13,"Mult","","",0,null],[13,"Divide","","",0,null],[13,"Plus","","",0,null],[13,"Minus","","",0,null],[13,"Mod","","",0,null],[13,"Colon","","",0,null],[13,"Greater","","",0,null],[13,"Lesser","","",0,null],[13,"Neq","","",0,null],[13,"Leq","","",0,null],[13,"Geq","","",0,null],[13,"DoubleEq","","",0,null],[13,"Not","","",0,null],[13,"Or","","",0,null],[13,"And","","",0,null],[13,"BitOr","","",0,null],[13,"BitAnd","","",0,null],[13,"BitXor","","",0,null],[13,"AddAssign","","",0,null],[13,"SubAssign","","",0,null],[13,"MulAssign","","",0,null],[13,"DivAssign","","",0,null],[13,"ModAssign","","",0,null],[13,"DoublePlus","","",0,null],[13,"DoubleMinus","","",0,null],[13,"Identifier","","",0,null],[13,"Unit","","",0,null],[13,"Int","","",0,null],[13,"Float","","",0,null],[13,"Bool","","",0,null],[13,"StringLit","","",0,null],[13,"CharLit","","",0,null],[13,"FormatStringLit","","",0,null],[13,"ShStatement","","",0,null],[13,"If","","",0,null],[13,"Then","","",0,null],[13,"Else","","",0,null],[13,"Elif","","",0,null],[13,"For","","",0,null],[13,"In","","",0,null],[13,"While","","",0,null],[13,"Case","","",0,null],[13,"Of","","",0,null],[13,"Func","","",0,null],[13,"Return","","",0,null],[5,"get_keywords","","A list of keywords, which should be treated as seperate…",null,[[],[["hashmap",3],["tok",4],["string",3]]]],[0,"error","","Lextime and Parsetime errors for technetium",null,null],[3,"LexError","lexer::error","",null,null],[12,"message","","",1,null],[12,"loc","","",1,null],[4,"MiscParseError","","",null,null],[13,"PostPreOp","","",2,null],[13,"Lex","","",2,null],[13,"Recursive","","",2,null],[5,"parse_error_to_diagnostic","","",null,[[["parseerror",6]],["diagnostic",3]]],[5,"offset_parse_error_spans","","",null,[[["parseerror",6]]]],[5,"offset_parse_result_error_spans","","",null,[[["result",4]]]],[6,"ParseError","","",null,null],[11,"new","","",1,[[["option",4]]]],[11,"offset_spans","","",1,[[]]],[11,"as_diagnostic","","",1,[[],["diagnostic",3]]],[11,"post_pre_op","","",2,[[]]],[11,"lex","","",2,[[["option",4]]]],[11,"as_diagnostic","","",2,[[],["diagnostic",3]]],[11,"offset_spans","","",2,[[]]],[6,"Spanned","lexer","",null,null],[11,"new","","",3,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"into_iter","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","lexer::error","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","lexer","",4,[[["miscparseerror",4]]]],[11,"from","lexer::error","",2,[[["parseerror",6]]]],[11,"next","lexer","",3,[[],["option",4]]],[11,"clone","lexer::error","",1,[[],["lexerror",3]]],[11,"clone","","",2,[[],["miscparseerror",4]]],[11,"clone","lexer","",0,[[],["tok",4]]],[11,"fmt","lexer::error","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","lexer","",0,[[["formatter",3]],["result",6]]]],"p":[[4,"Tok"],[3,"LexError"],[4,"MiscParseError"],[3,"Lexer"],[6,"ParseError"]]},\
"mlrefcell":{"doc":"","i":[[3,"AlreadyLockedError","mlrefcell","Returned when attempting to lock an already locked MLRefCell",null,null],[3,"MLRefCell","","A RefCell which can be \\\"locked\\\" to prevent future mutable…",null,null],[4,"BorrowMutError","","Returned from `borrow_mut`",null,null],[13,"AlreadyBorrowed","","Returned if the MLRefCell has already been borrowed",0,null],[13,"Locked","","Returned if the MLRefCell had been locked before",0,null],[6,"BorrowError","","",null,null],[11,"new","","Creates a new `MLRefCell` containing `value`",1,[[],["mlrefcell",3]]],[11,"into_inner","","Consumes the `MLRefCell`, returning the wrapped value",1,[[]]],[11,"replace","","Replaces the wrapped value with a new one, returning the…",1,[[]]],[11,"replace_with","","Replaces the wrapped value with a new one computed from f,…",1,[[["fnonce",8]]]],[11,"swap","","Swaps the wrapped value of self with the wrapped value of…",1,[[["refcell",3]]]],[11,"lock","","Locks the `MLRefCell`, so that future mutable borrows will…",1,[[],[["result",4],["alreadylockederror",3]]]],[11,"is_locked","","Returns whether the `MLRefCell` is locked.",1,[[]]],[11,"borrow","","Immutably borrows the wrapped value, panicking if the…",1,[[],["ref",3]]],[11,"try_borrow","","Immutably borrows the wrapped value, returning a…",1,[[],[["result",4],["borrowerror",6],["ref",3]]]],[11,"borrow_mut","","Mutably borrows the wrapped value, panicking if the value…",1,[[],["refmut",3]]],[11,"try_borrow_mut","","Mutably borrows the wrapped value, returning an error if…",1,[[],[["refmut",3],["borrowmuterror",4],["result",4]]]],[11,"as_ptr","","Returns a raw pointer to the underlying data in this cell.",1,[[]]],[11,"get_mut","","Returns a mutable reference to the underlying data. This…",1,[[]]],[11,"try_borrow_unguarded","","Immutably borrows the wrapped value, returning an error if…",1,[[],[["result",4],["borrowerror",6]]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"clone","","",0,[[],["borrowmuterror",4]]],[11,"clone","","",2,[[],["alreadylockederror",3]]],[11,"clone","","",1,[[],["mlrefcell",3]]],[11,"default","","",1,[[],["mlrefcell",3]]],[11,"cmp","","",0,[[["borrowmuterror",4]],["ordering",4]]],[11,"cmp","","",2,[[["alreadylockederror",3]],["ordering",4]]],[11,"eq","","",0,[[["borrowmuterror",4]]]],[11,"eq","","",2,[[["alreadylockederror",3]]]],[11,"partial_cmp","","",0,[[["borrowmuterror",4]],[["ordering",4],["option",4]]]],[11,"partial_cmp","","",2,[[["alreadylockederror",3]],[["ordering",4],["option",4]]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]]],"p":[[4,"BorrowMutError"],[3,"MLRefCell"],[3,"AlreadyLockedError"]]},\
"runtime":{"doc":"","i":[[3,"ObjectRef","runtime","The main object reference type, which can be passed around…",null,null],[3,"HashableObjectRef","","An object reference that\'s guaranteed to have a valid hash…",null,null],[3,"ObjectCell","","The universal container object for implementers of the…",null,null],[0,"builtins","","Builtin functions. These are usually specially generated…",null,null],[5,"add","runtime::builtins","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"sub","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"mul","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"negate","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"div","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"mod_","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"not","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"or","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"bitand","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"bitor","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"bitxor","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"and","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"cmp_lt","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"cmp_gt","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"cmp_eq","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"cmp_neq","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"cmp_leq","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"cmp_geq","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"index_get","","",null,[[["objectref",3]],[["runtimeresult",6],["objectref",3]]]],[5,"index_set","","",null,[[["objectref",3]],["runtimeresult",6]]],[0,"bytecode","runtime","Definitions for the technetium bytecode, which all…",null,null],[3,"FrameIdGen","runtime::bytecode","",null,null],[3,"FRAME_ID_GEN","","",null,null],[3,"DebugSymbol","","",null,null],[12,"file_id","","",0,null],[12,"location","","",0,null],[3,"GlobalContext","","",null,null],[12,"constant_descriptors","","",1,null],[12,"debug_descriptors","","",1,null],[3,"Frame","","",null,null],[12,"id","","",2,null],[12,"stack","","",2,null],[12,"locals","","",2,null],[4,"Op","","An operation on the technetium virtual machine",null,null],[13,"nop","","Do nothing",3,null],[13,"store","","Store the object on the top of the stack in a local variable",3,null],[13,"store_non_local","","Store the object on the top of the stack in a local…",3,null],[13,"load","","Load an object from a local variable",3,null],[13,"load_non_local","","Load an object from a local variable in a different frame",3,null],[13,"attach_ancestors","","Special for functions: Attach the current least_ancestor",3,null],[13,"swap","","Swap the top 2 objects on the stack",3,null],[13,"pop","","Pop the top of the stack",3,null],[13,"dup","","Create a shallow (reference) copy of the top of the stack",3,null],[13,"call_method","","Call the method of the (n + 2)nd object on the stack, with…",3,null],[13,"call_function","","Read the (n + 1)th object on the stack as a function…",3,null],[13,"get_attr","","Get an attribute of an object, reading the top as an…",3,null],[13,"set_attr","","",3,null],[13,"to_string","","",3,null],[13,"fmt_string","","",3,null],[13,"add","","",3,null],[13,"sub","","",3,null],[13,"mul","","",3,null],[13,"div","","",3,null],[13,"mod_","","",3,null],[13,"not","","",3,null],[13,"neg","","",3,null],[13,"or","","",3,null],[13,"and","","",3,null],[13,"bitor","","",3,null],[13,"bitand","","",3,null],[13,"bitxor","","",3,null],[13,"cmp_lt","","",3,null],[13,"cmp_gt","","",3,null],[13,"cmp_eq","","",3,null],[13,"cmp_neq","","",3,null],[13,"cmp_leq","","",3,null],[13,"cmp_geq","","",3,null],[13,"index_get","","",3,null],[13,"index_set","","",3,null],[13,"make_slice","","",3,null],[13,"make_iter","","Transform the object on the top of the stack into an…",3,null],[13,"take_iter","","Take the next element from the iterator on top of the…",3,null],[13,"mklist","","Take the top n elements of the stack and put them in a list",3,null],[13,"mktuple","","",3,null],[13,"mkset","","",3,null],[13,"mkdict","","",3,null],[13,"push_int","","",3,null],[13,"push_float","","",3,null],[13,"push_bool","","",3,null],[13,"push_const","","Push a constant referred to by a global constant descriptor",3,null],[13,"push_const_clone","","Push a constant referred to by a global constant…",3,null],[13,"push_global_default","","Push a constant built in object / default (see: standard)",3,null],[13,"push_unit","","",3,null],[13,"jmp","","Jump to a relative offset in the instructions",3,null],[13,"cond_jmp","","Jump if the top of the stack is truthy",3,null],[13,"ret","","Return the top of the stack from the current function",3,null],[13,"sh","","Launch as a subprocess the string on the top of the stack",3,null],[13,"debug","","Attach a debug reference to the next instruction in case…",3,null],[5,"gen_frame_id","","Generate a new unique FrameID. This uses a static counter…",null,[[],["frameid",6]]],[6,"FrameId","","An identifier unique to each frame of computation",null,null],[6,"ContextId","","Unique to each function in source code. Unlike FrameId,…",null,null],[6,"LocalName","","",null,null],[6,"NonLocalUnmappedName","","",null,null],[6,"NonLocalName","","",null,null],[6,"GlobalConstantDescriptor","","",null,null],[6,"DebugSpanDescriptor","","",null,null],[11,"new","","",0,[[["fileid",3],["span",3]]]],[11,"new","","",2,[[["hashmap",3],["globalcontext",3],["contextid",6],["rc",3],["frameid",6],["memorymanager",3]]]],[11,"run","","",2,[[],[["runtimeresult",6],["objectref",3]]]],[0,"error","runtime","Runtime errors for technetium",null,null],[3,"RuntimeError","runtime::error","An error from a computation on the technetium runtime",null,null],[12,"err","","",4,null],[12,"help","","A short description helping diagnose what caused the error",4,null],[12,"symbols","","The segment trace of user code where the error occured",4,null],[4,"RuntimeErrorType","","",null,null],[13,"TypeError","","",5,null],[13,"IntegerTooBigError","","",5,null],[13,"AttributeError","","",5,null],[13,"InternalError","","",5,null],[13,"IndexOutOfBounds","","",5,null],[13,"ChildProcessError","","",5,null],[13,"VariableUndefinedError","","Caused by trying to read an uninitialized variable",5,null],[13,"IOError","","Wrapping an std::io::Error",5,null],[13,"SysInfoError","","An error raised by the sys_info crate",5,null],[13,"PoisonError","","An error raised by trying to lock() a poisoned mutex on an…",5,null],[13,"BorrowError","","An error raised by trying to modify and read something at…",5,null],[13,"BorrowMutError","","",5,null],[13,"MutateImmutableError","","",5,null],[13,"KeyError","","Caused by trying to read a key that doesn\'t exist in a…",5,null],[6,"RuntimeResult","","The result of a computation on the technetium runtime",null,null],[11,"type_error","","",4,[[["tostring",8]]]],[11,"attribute_error","","",4,[[["tostring",8]]]],[11,"key_error","","",4,[[["tostring",8]]]],[11,"internal_error","","",4,[[["tostring",8]]]],[11,"variable_undefined_error","","",4,[[["tostring",8]]]],[11,"index_oob_error","","",4,[[["tostring",8]]]],[11,"index_too_big_error","","",4,[[["tostring",8]]]],[11,"child_process_error","","",4,[[["tostring",8]]]],[11,"attach_span","","Attach a code location to an error, for reporting…",4,[[["debugsymbol",3]]]],[11,"as_diagnostic","","Create a diagnostic message from an error, for reporting…",4,[[],[["fileid",3],["diagnostic",3]]]],[11,"stack_trace","","",4,[[["files",3]],[["string",3],["vec",3]]]],[0,"memory","runtime","",null,null],[3,"MemoryBacking","runtime::memory","",null,null],[3,"MemoryManager","","",null,null],[8,"BackingIndex","","",null,null],[10,"to_usize","","",6,[[]]],[11,"new","","",7,[[]]],[11,"get","","",7,[[["backingindex",8]],["option",4]]],[11,"get_mut","","",7,[[["backingindex",8]],["option",4]]],[11,"insert","","",7,[[["backingindex",8]]]],[11,"remove","","",7,[[["backingindex",8]]]],[11,"retain","","",7,[[]]],[11,"len","","",7,[[]]],[11,"new","","",8,[[]]],[11,"register_context","","",8,[[["contextid",6]]]],[11,"do_not_drop","","",8,[[["localname",6],["contextid",6]],["runtimeresult",6]]],[11,"register_frame","","",8,[[["frameid",6],["contextid",6]]]],[11,"get","","",8,[[["nonlocalname",6]],[["runtimeresult",6],["objectref",3]]]],[11,"set","","",8,[[["objectref",3],["nonlocalname",6]],["runtimeresult",6]]],[11,"clear_frame","","",8,[[["frameid",6]],["runtimeresult",6]]],[0,"standard","runtime","The standard library. This module contains definitions for…",null,null],[5,"get_default_namespace_descriptors","runtime::standard","",null,[[],[["hashmap",3],["globalconstantdescriptor",6],["string",3]]]],[5,"get_default_namespace","","",null,[[],[["hashmap",3],["objectref",3],["globalconstantdescriptor",6]]]],[0,"conversion","","",null,null],[3,"String_","runtime::standard::conversion","",null,null],[3,"Bool","","",null,null],[3,"Int","","",null,null],[3,"Float","","",null,null],[3,"Char","","",null,null],[3,"List_","","",null,null],[3,"Set_","","",null,null],[5,"to_int","","",null,[[["objectref",3]],[["runtimeresult",6],["bigint",3]]]],[5,"to_float","","",null,[[["objectref",3]],["runtimeresult",6]]],[5,"to_char","","",null,[[["objectref",3]],["runtimeresult",6]]],[0,"math","runtime::standard","",null,null],[3,"Sin","runtime::standard::math","",null,null],[3,"Cos","","",null,null],[3,"Tan","","",null,null],[3,"Abs","","",null,null],[3,"Sqrt","","",null,null],[3,"Exp","","",null,null],[3,"Ln","","",null,null],[3,"Arcsin","","",null,null],[3,"Arccos","","",null,null],[3,"Arctan","","",null,null],[0,"sh","runtime::standard","",null,null],[3,"ShObject","runtime::standard::sh","",null,null],[12,"argument","","",9,null],[12,"state","","",9,null],[12,"child","","",9,null],[12,"output","","",9,null],[3,"Sh","","",null,null],[3,"Cd","","",null,null],[3,"Os","","",null,null],[3,"LinuxDistro","","",null,null],[3,"Args","","",null,null],[3,"Which","","",null,null],[4,"ShObjectState","","",null,null],[13,"Prepared","","",10,null],[13,"Running","","",10,null],[13,"Finished","","",10,null],[11,"new","","",9,[[["string",3]],["objectref",3]]],[11,"spawn","","",9,[[],["runtimeresult",6]]],[11,"join","","",9,[[],["runtimeresult",6]]],[11,"stdout","","",9,[[],[["runtimeresult",6],["objectref",3]]]],[11,"stderr","","",9,[[],[["runtimeresult",6],["objectref",3]]]],[11,"exit_code","","",9,[[],[["runtimeresult",6],["objectref",3]]]],[11,"kill","","",9,[[],["runtimeresult",6]]],[0,"special_funcs","runtime::standard","",null,null],[3,"Print","runtime::standard::special_funcs","",null,null],[3,"Exit","","",null,null],[3,"Type","","",null,null],[3,"Hash","","",null,null],[3,"Lock","","",null,null],[3,"Clone_","","",null,null],[3,"Range","","",null,null],[3,"RangeIterator","","",null,null],[3,"RangeFunc","","",null,null],[11,"new","","",11,[[["range",3]],["objectref",3]]],[0,"string","runtime::standard","",null,null],[3,"Lines","runtime::standard::string","",null,null],[12,"parent","","",12,null],[3,"LinesIterator","","",null,null],[12,"inner","","",13,null],[3,"Chars","","",null,null],[12,"parent","","",14,null],[3,"CharsIterator","","",null,null],[12,"inner","","",15,null],[7,"STANDARD_CONTEXT_ID","runtime::standard","",null,null],[0,"core_objects","runtime","Core objects such as integers, booleans and strings",null,null],[3,"BoolObject","runtime::core_objects","",null,null],[12,"val","","",16,null],[3,"IntObject","","",null,null],[12,"val","","",17,null],[3,"FloatObject","","",null,null],[12,"val","","",18,null],[3,"CharObject","","",null,null],[12,"val","","",19,null],[3,"StringObject","","",null,null],[12,"val","","",20,null],[3,"Function","","A user defined function",null,null],[12,"nargs","","",21,null],[12,"name","","",21,null],[12,"context","","",21,null],[12,"code","","",21,null],[12,"context_id","","",21,null],[12,"least_ancestors","","",21,null],[3,"List","","",null,null],[12,"contents","","",22,null],[3,"ListIterator","","",null,null],[12,"parent","","",23,null],[12,"index","","",23,null],[3,"Slice","","",null,null],[12,"parent","","",24,null],[12,"start","","",24,null],[12,"stop","","",24,null],[12,"step","","",24,null],[3,"SliceIterator","","",null,null],[12,"parent","","",25,null],[12,"curr","","",25,null],[12,"stop","","",25,null],[12,"step","","",25,null],[3,"Tuple","","",null,null],[12,"contents","","",26,null],[3,"UnitObject","","",null,null],[3,"Set","","",null,null],[12,"contents","","",27,null],[3,"Dictionary","","",null,null],[12,"contents","","",28,null],[11,"new","","",16,[[],["objectref",3]]],[11,"new","","",17,[[],["objectref",3]]],[11,"new_big","","",17,[[["bigint",3]],["objectref",3]]],[11,"to_i64","","",17,[[],["runtimeresult",6]]],[11,"new","","",18,[[],["objectref",3]]],[11,"new","","",19,[[],["objectref",3]]],[11,"new","","",20,[[["string",3]],["objectref",3]]],[11,"new","","",29,[[],["objectref",3]]],[0,"prelude","runtime","",null,null],[7,"PARSED_CLARGS","","",null,null],[8,"ToAny","","",null,null],[10,"as_any","","",30,[[],["any",8]]],[10,"as_any_mut","","",30,[[],["any",8]]],[8,"OpaqueClone","","",null,null],[10,"opaque_clone","","",31,[[],["objectref",3]]],[8,"RawPointer","","",null,null],[10,"raw_pointer","","",32,[[]]],[8,"LockImmutable","","",null,null],[10,"lock_immutable","","",33,[[]]],[8,"Object","","The primary trait for objects in technetium.",null,null],[11,"technetium_clone","","Create a deep clone of an object. This is primarily used…",34,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_hash","","Hash an object. This is not required, so the default…",34,[[],["option",4]]],[10,"technetium_type_name","","A type name for an object.",34,[[],["string",3]]],[11,"to_string","","Convert an object to a String.",34,[[],[["runtimeresult",6],["string",3]]]],[11,"get_attr","","Get an attribute of an object",34,[[["string",3]],[["runtimeresult",6],["objectref",3]]]],[11,"set_attr","","Set an attribute of an object",34,[[["objectref",3],["string",3]],["runtimeresult",6]]],[11,"call_method","","Call a given method of an object",34,[[],[["runtimeresult",6],["objectref",3]]]],[11,"call","","Call a given object as a function.",34,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"make_iter","","Create an iterator over an object. This is used for…",34,[[],[["runtimeresult",6],["objectref",3]]]],[11,"take_iter","","Take from this object, assuming it is an iterator. This is…",34,[[],[["option",4],["runtimeresult",6]]]],[11,"truthy","","Determine whether an object is \\\"truthy\\\" (whether it should…",34,[[]]],[11,"technetium_eq","","Equal-as-value (like == in Python, or .equals() in Java)",34,[[["objectref",3]],["option",4]]],[11,"ref_eq","","Equal-as-reference (like `is` in Python, or == in Java)",34,[[["objectref",3]]]],[11,"new_from_cell","","",35,[[["objectcell",3]]]],[11,"new","","",35,[[]]],[11,"hashable","","Create a HashableObjectRef, by checking if it has a valid…",35,[[],[["option",4],["hashableobjectref",3]]]],[11,"new","","",36,[[]]],[11,"lock","","Lock the `MLRefCell` inside the cell, effectively making…",36,[[]]],[14,"func_object_void","","",null,null],[14,"func_object","","",null,null],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","","",37,[[]]],[11,"into","","",37,[[]]],[11,"to_owned","","",37,[[]]],[11,"clone_into","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"try_into","","",37,[[],["result",4]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"as_any","","",36,[[],["any",8]]],[11,"as_any_mut","","",36,[[],["any",8]]],[11,"from","","",36,[[]]],[11,"into","","",36,[[]]],[11,"to_owned","","",36,[[]]],[11,"clone_into","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"try_into","","",36,[[],["result",4]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"from","runtime::bytecode","",38,[[]]],[11,"into","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"try_into","","",38,[[],["result",4]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",39,[[]]],[11,"into","","",39,[[]]],[11,"try_from","","",39,[[],["result",4]]],[11,"try_into","","",39,[[],["result",4]]],[11,"borrow","","",39,[[]]],[11,"borrow_mut","","",39,[[]]],[11,"type_id","","",39,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","runtime::error","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","runtime::memory","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","runtime::standard::conversion","",40,[[]]],[11,"into","","",40,[[]]],[11,"try_from","","",40,[[],["result",4]]],[11,"try_into","","",40,[[],["result",4]]],[11,"borrow","","",40,[[]]],[11,"borrow_mut","","",40,[[]]],[11,"type_id","","",40,[[],["typeid",3]]],[11,"from","","",41,[[]]],[11,"into","","",41,[[]]],[11,"try_from","","",41,[[],["result",4]]],[11,"try_into","","",41,[[],["result",4]]],[11,"borrow","","",41,[[]]],[11,"borrow_mut","","",41,[[]]],[11,"type_id","","",41,[[],["typeid",3]]],[11,"from","","",42,[[]]],[11,"into","","",42,[[]]],[11,"try_from","","",42,[[],["result",4]]],[11,"try_into","","",42,[[],["result",4]]],[11,"borrow","","",42,[[]]],[11,"borrow_mut","","",42,[[]]],[11,"type_id","","",42,[[],["typeid",3]]],[11,"from","","",43,[[]]],[11,"into","","",43,[[]]],[11,"try_from","","",43,[[],["result",4]]],[11,"try_into","","",43,[[],["result",4]]],[11,"borrow","","",43,[[]]],[11,"borrow_mut","","",43,[[]]],[11,"type_id","","",43,[[],["typeid",3]]],[11,"from","","",44,[[]]],[11,"into","","",44,[[]]],[11,"try_from","","",44,[[],["result",4]]],[11,"try_into","","",44,[[],["result",4]]],[11,"borrow","","",44,[[]]],[11,"borrow_mut","","",44,[[]]],[11,"type_id","","",44,[[],["typeid",3]]],[11,"from","","",45,[[]]],[11,"into","","",45,[[]]],[11,"try_from","","",45,[[],["result",4]]],[11,"try_into","","",45,[[],["result",4]]],[11,"borrow","","",45,[[]]],[11,"borrow_mut","","",45,[[]]],[11,"type_id","","",45,[[],["typeid",3]]],[11,"from","","",46,[[]]],[11,"into","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"try_into","","",46,[[],["result",4]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"from","runtime::standard::math","",47,[[]]],[11,"into","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"try_into","","",47,[[],["result",4]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"from","","",48,[[]]],[11,"into","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"from","","",49,[[]]],[11,"into","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"from","","",50,[[]]],[11,"into","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"from","","",51,[[]]],[11,"into","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"try_into","","",51,[[],["result",4]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"from","","",52,[[]]],[11,"into","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"try_into","","",52,[[],["result",4]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"from","","",53,[[]]],[11,"into","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"from","","",54,[[]]],[11,"into","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"from","","",55,[[]]],[11,"into","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"from","","",56,[[]]],[11,"into","","",56,[[]]],[11,"try_from","","",56,[[],["result",4]]],[11,"try_into","","",56,[[],["result",4]]],[11,"borrow","","",56,[[]]],[11,"borrow_mut","","",56,[[]]],[11,"type_id","","",56,[[],["typeid",3]]],[11,"from","runtime::standard::sh","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",57,[[]]],[11,"into","","",57,[[]]],[11,"try_from","","",57,[[],["result",4]]],[11,"try_into","","",57,[[],["result",4]]],[11,"borrow","","",57,[[]]],[11,"borrow_mut","","",57,[[]]],[11,"type_id","","",57,[[],["typeid",3]]],[11,"from","","",58,[[]]],[11,"into","","",58,[[]]],[11,"try_from","","",58,[[],["result",4]]],[11,"try_into","","",58,[[],["result",4]]],[11,"borrow","","",58,[[]]],[11,"borrow_mut","","",58,[[]]],[11,"type_id","","",58,[[],["typeid",3]]],[11,"from","","",59,[[]]],[11,"into","","",59,[[]]],[11,"try_from","","",59,[[],["result",4]]],[11,"try_into","","",59,[[],["result",4]]],[11,"borrow","","",59,[[]]],[11,"borrow_mut","","",59,[[]]],[11,"type_id","","",59,[[],["typeid",3]]],[11,"from","","",60,[[]]],[11,"into","","",60,[[]]],[11,"try_from","","",60,[[],["result",4]]],[11,"try_into","","",60,[[],["result",4]]],[11,"borrow","","",60,[[]]],[11,"borrow_mut","","",60,[[]]],[11,"type_id","","",60,[[],["typeid",3]]],[11,"from","","",61,[[]]],[11,"into","","",61,[[]]],[11,"try_from","","",61,[[],["result",4]]],[11,"try_into","","",61,[[],["result",4]]],[11,"borrow","","",61,[[]]],[11,"borrow_mut","","",61,[[]]],[11,"type_id","","",61,[[],["typeid",3]]],[11,"from","","",62,[[]]],[11,"into","","",62,[[]]],[11,"try_from","","",62,[[],["result",4]]],[11,"try_into","","",62,[[],["result",4]]],[11,"borrow","","",62,[[]]],[11,"borrow_mut","","",62,[[]]],[11,"type_id","","",62,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","runtime::standard::special_funcs","",63,[[]]],[11,"into","","",63,[[]]],[11,"try_from","","",63,[[],["result",4]]],[11,"try_into","","",63,[[],["result",4]]],[11,"borrow","","",63,[[]]],[11,"borrow_mut","","",63,[[]]],[11,"type_id","","",63,[[],["typeid",3]]],[11,"from","","",64,[[]]],[11,"into","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"try_into","","",64,[[],["result",4]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"from","","",65,[[]]],[11,"into","","",65,[[]]],[11,"try_from","","",65,[[],["result",4]]],[11,"try_into","","",65,[[],["result",4]]],[11,"borrow","","",65,[[]]],[11,"borrow_mut","","",65,[[]]],[11,"type_id","","",65,[[],["typeid",3]]],[11,"from","","",66,[[]]],[11,"into","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"from","","",67,[[]]],[11,"into","","",67,[[]]],[11,"try_from","","",67,[[],["result",4]]],[11,"try_into","","",67,[[],["result",4]]],[11,"borrow","","",67,[[]]],[11,"borrow_mut","","",67,[[]]],[11,"type_id","","",67,[[],["typeid",3]]],[11,"from","","",68,[[]]],[11,"into","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"from","","",69,[[]]],[11,"into","","",69,[[]]],[11,"to_owned","","",69,[[]]],[11,"clone_into","","",69,[[]]],[11,"try_from","","",69,[[],["result",4]]],[11,"try_into","","",69,[[],["result",4]]],[11,"borrow","","",69,[[]]],[11,"borrow_mut","","",69,[[]]],[11,"type_id","","",69,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",70,[[]]],[11,"into","","",70,[[]]],[11,"try_from","","",70,[[],["result",4]]],[11,"try_into","","",70,[[],["result",4]]],[11,"borrow","","",70,[[]]],[11,"borrow_mut","","",70,[[]]],[11,"type_id","","",70,[[],["typeid",3]]],[11,"from","runtime::standard::string","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","runtime::core_objects","",16,[[]]],[11,"into","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"into","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"opaque_clone","runtime","",36,[[],["objectref",3]]],[11,"raw_pointer","","",36,[[]]],[11,"lock_immutable","","",36,[[]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call_method","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_clone","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"make_iter","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"take_iter","","",36,[[],[["option",4],["runtimeresult",6]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_clone","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"make_iter","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"take_iter","","",36,[[],[["option",4],["runtimeresult",6]]]],[11,"technetium_clone","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"make_iter","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"take_iter","","",36,[[],[["option",4],["runtimeresult",6]]]],[11,"technetium_clone","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_hash","","",36,[[],["option",4]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"to_string","","",36,[[],[["runtimeresult",6],["string",3]]]],[11,"truthy","","",36,[[]]],[11,"technetium_eq","","",36,[[["objectref",3]],["option",4]]],[11,"technetium_clone","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"technetium_hash","","",36,[[],["option",4]]],[11,"to_string","","",36,[[],[["runtimeresult",6],["string",3]]]],[11,"truthy","","",36,[[]]],[11,"technetium_eq","","",36,[[["objectref",3]],["option",4]]],[11,"technetium_clone","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"technetium_hash","","",36,[[],["option",4]]],[11,"to_string","","",36,[[],[["runtimeresult",6],["string",3]]]],[11,"truthy","","",36,[[]]],[11,"technetium_eq","","",36,[[["objectref",3]],["option",4]]],[11,"technetium_clone","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"technetium_hash","","",36,[[],["option",4]]],[11,"to_string","","",36,[[],[["runtimeresult",6],["string",3]]]],[11,"truthy","","",36,[[]]],[11,"technetium_eq","","",36,[[["objectref",3]],["option",4]]],[11,"technetium_clone","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"technetium_hash","","",36,[[],["option",4]]],[11,"to_string","","",36,[[],[["runtimeresult",6],["string",3]]]],[11,"truthy","","",36,[[]]],[11,"call_method","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_eq","","",36,[[["objectref",3]],["option",4]]],[11,"technetium_clone","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"truthy","","",36,[[]]],[11,"call","","",36,[[["memorymanager",3]],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_clone","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"technetium_hash","","",36,[[],["option",4]]],[11,"to_string","","",36,[[],[["runtimeresult",6],["string",3]]]],[11,"truthy","","",36,[[]]],[11,"call_method","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"make_iter","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_eq","","",36,[[["objectref",3]],["option",4]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"take_iter","","",36,[[],[["option",4],["runtimeresult",6]]]],[11,"technetium_clone","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"make_iter","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"to_string","","",36,[[],[["runtimeresult",6],["string",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"take_iter","","",36,[[],[["option",4],["runtimeresult",6]]]],[11,"technetium_clone","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"technetium_hash","","",36,[[],["option",4]]],[11,"truthy","","",36,[[]]],[11,"call_method","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_eq","","",36,[[["objectref",3]],["option",4]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"to_string","","",36,[[],[["runtimeresult",6],["string",3]]]],[11,"truthy","","",36,[[]]],[11,"technetium_eq","","",36,[[["objectref",3]],["option",4]]],[11,"technetium_clone","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"technetium_hash","","",36,[[],["option",4]]],[11,"to_string","","",36,[[],[["runtimeresult",6],["string",3]]]],[11,"truthy","","",36,[[]]],[11,"call_method","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_eq","","",36,[[["objectref",3]],["option",4]]],[11,"technetium_clone","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_type_name","","",36,[[],["string",3]]],[11,"technetium_hash","","",36,[[],["option",4]]],[11,"to_string","","",36,[[],[["runtimeresult",6],["string",3]]]],[11,"truthy","","",36,[[]]],[11,"call_method","","",36,[[],[["runtimeresult",6],["objectref",3]]]],[11,"technetium_eq","","",36,[[["objectref",3]],["option",4]]],[11,"from","runtime::error","",4,[[["error",4]]]],[11,"from","","",4,[[["error",3]]]],[11,"from","","",4,[[["poisonerror",3]]]],[11,"from","","",4,[[["borrowerror",3]]]],[11,"from","","",4,[[["borrowmuterror",3]]]],[11,"from","","",4,[[["borrowmuterror",4]]]],[11,"clone","runtime::bytecode","",0,[[],["debugsymbol",3]]],[11,"clone","","",3,[[],["op",4]]],[11,"clone","runtime::error","",4,[[],["runtimeerror",3]]],[11,"clone","","",5,[[],["runtimeerrortype",4]]],[11,"clone","runtime::memory","",7,[[],["memorybacking",3]]],[11,"clone","runtime::standard::special_funcs","",69,[[],["range",3]]],[11,"clone","runtime::standard::string","",12,[[],["lines",3]]],[11,"clone","","",14,[[],["chars",3]]],[11,"clone","runtime::core_objects","",19,[[],["charobject",3]]],[11,"clone","","",24,[[],["slice",3]]],[11,"clone","runtime","",37,[[]]],[11,"clone","","",35,[[]]],[11,"clone","","",36,[[]]],[11,"default","runtime::memory","",8,[[]]],[11,"eq","runtime","",37,[[["hashableobjectref",3]]]],[11,"eq","","",35,[[["objectref",3]]]],[11,"deref","runtime::bytecode","",39,[[],["mutex",3]]],[11,"deref","runtime","",35,[[]]],[11,"deref","","",37,[[]]],[11,"deref","","",36,[[]]],[11,"deref_mut","","",35,[[]]],[11,"deref_mut","","",37,[[]]],[11,"deref_mut","","",36,[[]]],[11,"fmt","runtime::bytecode","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","runtime::error","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","runtime::memory","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","runtime::standard::sh","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","runtime::standard::special_funcs","",69,[[["formatter",3]],["result",6]]],[11,"fmt","runtime::standard::string","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","runtime::core_objects","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","runtime","",35,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","runtime::bytecode","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","runtime::error","",4,[[["formatter",3]],["result",6]]],[11,"hash","runtime::core_objects","",16,[[]]],[11,"hash","","",17,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",20,[[]]],[11,"hash","runtime","",37,[[]]],[11,"initialize","runtime::bytecode","",39,[[]]]],"p":[[3,"DebugSymbol"],[3,"GlobalContext"],[3,"Frame"],[4,"Op"],[3,"RuntimeError"],[4,"RuntimeErrorType"],[8,"BackingIndex"],[3,"MemoryBacking"],[3,"MemoryManager"],[3,"ShObject"],[4,"ShObjectState"],[3,"RangeIterator"],[3,"Lines"],[3,"LinesIterator"],[3,"Chars"],[3,"CharsIterator"],[3,"BoolObject"],[3,"IntObject"],[3,"FloatObject"],[3,"CharObject"],[3,"StringObject"],[3,"Function"],[3,"List"],[3,"ListIterator"],[3,"Slice"],[3,"SliceIterator"],[3,"Tuple"],[3,"Set"],[3,"Dictionary"],[3,"UnitObject"],[8,"ToAny"],[8,"OpaqueClone"],[8,"RawPointer"],[8,"LockImmutable"],[8,"Object"],[3,"ObjectRef"],[3,"ObjectCell"],[3,"HashableObjectRef"],[3,"FrameIdGen"],[3,"FRAME_ID_GEN"],[3,"String_"],[3,"Bool"],[3,"Int"],[3,"Float"],[3,"Char"],[3,"List_"],[3,"Set_"],[3,"Sin"],[3,"Cos"],[3,"Tan"],[3,"Abs"],[3,"Sqrt"],[3,"Exp"],[3,"Ln"],[3,"Arcsin"],[3,"Arccos"],[3,"Arctan"],[3,"Sh"],[3,"Cd"],[3,"Os"],[3,"LinuxDistro"],[3,"Args"],[3,"Which"],[3,"Print"],[3,"Exit"],[3,"Type"],[3,"Hash"],[3,"Lock"],[3,"Clone_"],[3,"Range"],[3,"RangeFunc"]]},\
"tech":{"doc":"","i":[[5,"main","tech","The main application entry point",null,[[]]],[0,"logging","","Application logging utilities for technetium",null,null],[3,"Logger","tech::logging","A very simple logger for the `log` crate",null,null],[12,"level","","",0,null],[5,"init","","Initialize the logging of the application to a given…",null,[[["level",4]],[["result",4],["setloggererror",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"enabled","","",0,[[["metadata",3]]]],[11,"log","","",0,[[["record",3]]]],[11,"flush","","",0,[[]]]],"p":[[3,"Logger"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);